{
	"name": "js-string-escape",
	"versions": {
		"0.0.1": {
			"name": "js-string-escape",
			"version": "0.0.1",
			"description": "Escape strings for use as JavaScript string literals",
			"main": "index.js",
			"scripts": {
				"test": "tap test"
			},
			"repository": {
				"type": "git",
				"url": "https://github.com/joliss/js-string-escape"
			},
			"keywords": [
				"string",
				"escape",
				"backslash",
				"javascript",
				"ecmascript"
			],
			"author": {
				"name": "Jo Liss",
				"email": "joliss42@gmail.com"
			},
			"license": "MIT",
			"devDependencies": {
				"tap": "latest"
			},
			"_id": "js-string-escape@0.0.1",
			"dist": {
				"shasum": "e098f003cf2784bde004fd51a21f728a37e262e7",
				"tarball": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-0.0.1.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.2.18",
			"_npmUser": {
				"name": "joliss",
				"email": "joliss42@gmail.com"
			},
			"maintainers": [
				{
					"name": "joliss",
					"email": "joliss42@gmail.com"
				}
			],
			"directories": {}
		},
		"1.0.0": {
			"name": "js-string-escape",
			"version": "1.0.0",
			"description": "Escape strings for use as JavaScript string literals",
			"main": "index.js",
			"scripts": {
				"test": "tap test"
			},
			"repository": {
				"type": "git",
				"url": "https://github.com/joliss/js-string-escape"
			},
			"keywords": [
				"string",
				"escape",
				"backslash",
				"javascript",
				"ecmascript"
			],
			"author": {
				"name": "Jo Liss",
				"email": "joliss42@gmail.com"
			},
			"contributors": [
				{
					"name": "Mathias Bynens",
					"url": "http://mathiasbynens.be/"
				}
			],
			"license": "MIT",
			"devDependencies": {
				"tap": "~> 0.4.2",
				"punycode": "~> 1.2.1"
			},
			"engines": {
				"node": ">= 0.8"
			},
			"bugs": {
				"url": "https://github.com/joliss/js-string-escape/issues"
			},
			"_id": "js-string-escape@1.0.0",
			"dist": {
				"shasum": "d2d2365fd2e6b3948b8374ac7628ac0e84d00002",
				"tarball": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.0.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.2.25",
			"_npmUser": {
				"name": "joliss",
				"email": "joliss42@gmail.com"
			},
			"maintainers": [
				{
					"name": "joliss",
					"email": "joliss42@gmail.com"
				}
			],
			"directories": {}
		},
		"1.0.1": {
			"name": "js-string-escape",
			"version": "1.0.1",
			"description": "Escape strings for use as JavaScript string literals",
			"main": "index.js",
			"scripts": {
				"test": "tap test"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/joliss/js-string-escape.git"
			},
			"keywords": [
				"string",
				"escape",
				"backslash",
				"javascript",
				"ecmascript"
			],
			"author": {
				"name": "Jo Liss",
				"email": "joliss42@gmail.com"
			},
			"contributors": [
				{
					"name": "Mathias Bynens",
					"url": "http://mathiasbynens.be/"
				}
			],
			"license": "MIT",
			"devDependencies": {
				"tap": "~> 0.4.2",
				"punycode": "~> 1.2.1"
			},
			"engines": {
				"node": ">= 0.8"
			},
			"files": [
				"index.js"
			],
			"gitHead": "66d3aff579a45fae65c3d9f8740e44009cdbda26",
			"bugs": {
				"url": "https://github.com/joliss/js-string-escape/issues"
			},
			"homepage": "https://github.com/joliss/js-string-escape#readme",
			"_id": "js-string-escape@1.0.1",
			"_shasum": "e2625badbc0d67c7533e9edc1068c587ae4137ef",
			"_from": ".",
			"_npmVersion": "2.14.4",
			"_nodeVersion": "4.1.2",
			"_npmUser": {
				"name": "joliss",
				"email": "joliss42@gmail.com"
			},
			"maintainers": [
				{
					"name": "joliss",
					"email": "joliss42@gmail.com"
				}
			],
			"dist": {
				"shasum": "e2625badbc0d67c7533e9edc1068c587ae4137ef",
				"tarball": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.1.tgz"
			},
			"_npmOperationalInternal": {
				"host": "packages-12-west.internal.npmjs.com",
				"tmp": "tmp/js-string-escape-1.0.1.tgz_1457658719936_0.2624991138000041"
			},
			"directories": {}
		}
	},
	"time": {
		"modified": "2018-03-04T09:58:06.399Z",
		"created": "2013-05-12T21:23:39.920Z",
		"0.0.1": "2013-05-12T21:23:41.390Z",
		"1.0.0": "2013-06-17T17:33:46.185Z",
		"1.0.1": "2016-03-11T01:12:02.390Z"
	},
	"dist-tags": {
		"latest": "1.0.1"
	},
	"_uplinks": {
		"npmjs": {
			"etag": "W/\"7a3a34bc5481391a843e83ec11634ab4\"",
			"fetched": 1550359654260
		}
	},
	"_distfiles": {
		"js-string-escape-0.0.1.tgz": {
			"url": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-0.0.1.tgz",
			"sha": "e098f003cf2784bde004fd51a21f728a37e262e7",
			"registry": "npmjs"
		},
		"js-string-escape-1.0.0.tgz": {
			"url": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.0.tgz",
			"sha": "d2d2365fd2e6b3948b8374ac7628ac0e84d00002",
			"registry": "npmjs"
		},
		"js-string-escape-1.0.1.tgz": {
			"url": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.1.tgz",
			"sha": "e2625badbc0d67c7533e9edc1068c587ae4137ef",
			"registry": "npmjs"
		}
	},
	"_attachments": {
		"js-string-escape-1.0.1.tgz": {
			"shasum": "e2625badbc0d67c7533e9edc1068c587ae4137ef"
		}
	},
	"_rev": "2-3046adae881dc6fa",
	"_id": "js-string-escape",
	"readme": "# js-string-escape\n\n[![Build Status](https://travis-ci.org/joliss/js-string-escape.png?branch=master)](https://travis-ci.org/joliss/js-string-escape)\n\nEscape any string to be a valid JavaScript string literal between double\nquotes or single quotes.\n\n## Installation\n\n```\nnpm install js-string-escape\n```\n\n## Example\n\nIf you need to generate JavaScript output, this library will help you safely\nput arbitrary data in JavaScript strings:\n\n```js\njsStringEscape = require('js-string-escape')\n\nconsole.log('\"' + jsStringEscape('Quotes (\\\", \\'), newlines (\\n), etc.') + '\"')\n// => \"Quotes (\\\", \\'), newlines (\\n), etc.\"\n```\n\nIn other words, given any string `s`, the following invariants hold:\n\n```js\neval('\"' + jsStringEscape(s) + '\"') === s\neval(\"'\" + jsStringEscape(s) + \"'\") === s\n```\n\nThese `eval` expressions are safe with untrusted strings `s`.\n\nNon-strings will be cast to strings.\n\n## Compliance\n\nThis library has been checked against [ECMAScript\n5.1](http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4) and tested\nagainst all Unicode code points.\n\nNote that the returned string is not necessarily valid JSON, since JSON\ndisallows control characters, and `\\'` is illegal in JSON."
}